openapi: 3.0.0
info:
  title: Gym Management API
  version: "1.0"
servers:
  - url: http://localhost:4000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        active:
          type: boolean

    Plan:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        durationInMonths:
          type: integer
        price:
          type: number

    Member:
      type: object
      properties:
        id:
          type: string
        fullName:
          type: string
        phone:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        planId:
          type: string
        createdById:
          type: string

    Payment:
      type: object
      properties:
        id:
          type: string
        memberId:
          type: string
        amount:
          type: number
        nextDue:
          type: string
          format: date

paths:
  /api/auth/login:
    post:
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"

  /api/users:
    get:
      summary: List users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        "201":
          description: Created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /api/users/{id}:
    put:
      summary: Update user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                role:
                  type: string
                active:
                  type: boolean
      responses:
        "200":
          description: Updated user
    delete:
      summary: Delete user
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted

  /api/plans:
    get:
      summary: List plans
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plan"
    post:
      summary: Create plan
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                durationInMonths:
                  type: integer
                price:
                  type: number
      responses:
        "201":
          description: Created plan

  /api/plans/{id}:
    put:
      summary: Update plan
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                durationInMonths:
                  type: integer
                price:
                  type: number
      responses:
        "200":
          description: Updated plan
    delete:
      summary: Delete plan
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted

  /api/members:
    get:
      summary: List members
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Member"
    post:
      summary: Create member
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                phone:
                  type: string
                startDate:
                  type: string
                  format: date
                planId:
                  type: string
                createdById:
                  type: string
      responses:
        "201":
          description: Created member

  /api/members/{id}:
    get:
      summary: Get member by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Member details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
    put:
      summary: Update member
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Updated member
    delete:
      summary: Delete member
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted

  /api/members/{id}/renew:
    post:
      summary: Renew member subscription
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        "200":
          description: Renewed subscription

  /api/payments:
    get:
      summary: List payments
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
    post:
      summary: Create payment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                memberId:
                  type: string
                amount:
                  type: number
                nextDue:
                  type: string
                  format: date
      responses:
        "201":
          description: Created payment
